pipeline:
  #  restore-cache:
  #    image: drillster/drone-volume-cache
  #    restore: true
  #    mount:
  #      - ./node_modules
  #    volumes:
  #      - /tmp/cache:/cache

#  run-tests-suite:
#    image: michalpodeszwa/docker-compose:latest
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    commands:
#      - ./bin/drone-run-tests.sh integration-tests
#    when:
#      event: [push]
#
  build:
    image: simontegg/alpine-node-git
    commands:
      - npm install
      - npm run build
    cache:
      mount: 
        - node_modules
        - .git

#  rebuild-cache:
#    image: drillster/drone-volume-cache
#    rebuild: true
#    mount:
#      - ./node_modules
#    volumes:
#      - /tmp/cache:/cache
#
#  unit-tests:
#    image: simontegg/alpine-node-git
#    commands:
#      - npm test
#
  integration-tests:
    image: simontegg/alpine-node-git
    environment:
 
      - DATABASE_URL=postgresql://postgres:postgres@postgres/test
      - DOCKER_API_VERSION=1.20
      - DOCKER_HOST=/var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - npm run test:integration


#  push-to-registry:
#    image: plugins/docker
#    registry: r.cfcr.io
#    repo: r.cfcr.io/simontegg/simontegg/enterprisestack
#    secrets: [docker_username, docker_password]
#
#  rancher:
#    image: peloton/drone-rancher
#    url: http://104.237.4.81:8080
#    secrets: [PLUGIN_ACCESS_KEY, PLUGIN_SECRET_KEY]
#    service: accreditron/staging
#    docker_image: r.cfcr.io/simontegg/simontegg/enterprisestack
#    timeout: 360
#    confirm: true
#
services:
  postgres:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_DB=test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  
