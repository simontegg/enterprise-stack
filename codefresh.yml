version: '1.0'
steps:
  build:
    title: Building Docker Image
    type: build
    image_name: simontegg/enterprisestack
    working_directory: ./
    dockerfile: Dockerfile
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
#  unit-tests:
#    title: Running Unit Tests
#    image: '${{build}}'
#    working_directory: IMAGE_WORK_DIR
#    comands: 
#      - npm run build
#      - npm test
  integration-tests:
    type: composition
    working_directory: IMAGE_WORK_DIR
    composition:
      version: '3'
      services: 
        app: 
          image: '${{build}}'
          links:
            - postgres
          ports: 
            - 3000
        postgres:
          image: postgres:9.6-alpine
          healthcheck:
            test: ["CMD", "pg_isready"]
            interval: 1m30s
            timeout: 10s
            retries: 3

    composition_candidates:
      tests:
        image: '${{build}}'
        command: NODE=test npm run test:integration
    composition_variables:
      - DATABASE_URL=postgresql://postgres:postgres@postgres/test

    on_success:
      metadata:
        set:
          - '${{build.imageId}}':
              - CF_QUALITY: true
    on_fail:
      metadata:
        set:
          - '${{build.imageId}}':
              - CF_QUALITY: false


